* ess-R-pkg-compile.el
An Emacs package that attempts to save you a few seconds when developing your R
package in ESS. These are early days and all input is welcome.

* Current functionality:
+ attempts to detach and re-load your R package after compilation
+ this is provided through a wrapper of the compile function that includes a post-compilation hook
+ it handles multiple R process
+ if a package could not be detached due to dependant packages those will also be detached
+ if detaching fails it will prompt you to restart the R process

* Usage:
+ download ess-R-pkg-compile.el and put in your path
#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/path/to/ess-R-pkg-compile/")
(require 'ess-R-pkg-compile)
#+END_SRC
+ provide information to =ess-R-pkg-compile--compile= function e.g. like:
#+BEGIN_SRC emacs-lisp
  (setq ess-R-pkg-compile--default-R-pkg-parent-path "~/path/to/myRpackages")

  (ess-R-pkg-compile--macro "my-package")
  ;; this is now interactively available through
  (ess-R-pkg-compile--my-package) ;; n.b. the optional universal argument for build flags
#+END_SRC
+ Should you have multiple packages you could also use:
#+BEGIN_SRC emacs-lisp
  (ess-R-pkg-compile--macro "my-second-package")
  (add-to-list 'ess-R-pkg-compile--build-list 'my-package)
  (add-to-list 'ess-R-pkg-compile--build-list 'my-second-package)
#+END_SRC

+ Now call the interactive function below and re-build the package you want. If
  want you can use the universal argument for more build flags.
#+BEGIN_SRC emacs-lisp
  (ess-R-pkg-compile--select-build)
#+END_SRC
